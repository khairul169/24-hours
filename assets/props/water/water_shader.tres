[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]

code = "shader_type spatial;
render_mode cull_disabled, shadows_disabled;

uniform vec4 albedo : hint_color;

void fragment() {
	ALBEDO = albedo.rgb;
	METALLIC = 0.0;
	ROUGHNESS = 1.0;
	SPECULAR = 0.0;
	ALPHA = albedo.a;
	
	float depth_tex = textureLod(DEPTH_TEXTURE,SCREEN_UV,0.0).r;
	vec4 world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV*2.0-1.0,depth_tex*2.0-1.0,1.0);
	world_pos.xyz/=world_pos.w;
	
	ALPHA *= clamp(1.0-smoothstep(world_pos.z + 1.0, world_pos.z, VERTEX.z), 0.0, 1.0);
	ALPHA *= clamp(smoothstep(0.0, 1.0, -VERTEX.z), 0.0, 1.0);
	
	float shore_distance = 2.0 + (sin(TIME * 2.8) * 0.2);
	float shoreline = clamp(smoothstep(world_pos.z + shore_distance, world_pos.z, VERTEX.z), 0.0, 1.0);
	ALBEDO = mix(ALBEDO, vec3(1), shoreline * 0.2);
}
"

[resource]

render_priority = 0
shader = SubResource( 1 )
shader_param/albedo = Color( 0.270588, 0.321569, 0.396078, 1 )
_sections_unfolded = [ "Shader Param" ]

